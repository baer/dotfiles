[hub]
        protocol = https
[user]
        name = Aaron Pollack
        email = pollackaaron@gmail.com
[credential]
        helper = osxkeychain
[alias]
        # Display concise repository status
        wtf  = !$DOTFILES/bin/git-wtf

        # Delete all local branches that have been merged into HEAD
        dall = branch -d `git branch --merged | grep -v '^*' | grep -v 'master' | tr -d '\n'`

        # shortcuts
        co = checkout
        c  = commit
        s  = status -sb
        b  = branch
        a  = add -A .

        # Diffs
        sdiff = diff --shortstat
        ndiff = diff --name-only
        count = !git shortlog -sn

        # Logs
        plog  = log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
        logme = log --author="Eric"
        blog  = log --graph --decorate --pretty=oneline --abbrev-commit

        # Pull/Push
        pm  = pull origin master
        pd  = pull origin develop
        pum = push origin master
        pud = push origin develop

        # Safeguards
        rebase = rebase -i
        blame = blame -w --no-merges

        # Custom graph log (append any tree-ish)
        graph = log --pretty=nice --date-order --graph
        # Custom graph log for all branches
        grapha = log --pretty=nice --date-order --graph --all

        # Custom pretty log
        logp = log --pretty=nice --date-order

        # Diffstat log
        logst = log --stat
        # Short format diffstat log
        logsf = log --stat --format=oneline --abbrev-commit

        # Fetch and checkout a GitHub Pull Request from a remote (defaults to `origin`)
        # Use: `git gh-pr 123` or `git gh-pr 123 upstream`
        gh-pr = !bash -c 'git fetch -fu ${2:-origin} refs/pull/$1/head:gh-pr/$1 && git checkout gh-pr/$1' -

        # Find out who is currently active on the repository
        # Displays committers in descending order of number of commits
        who = shortlog --numbered --summary --email --no-merges --since="3 months"

[color]
        diff = auto
        status = auto
        branch = auto
        ui = true


[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green

[color "status"]
        added = green
        changed = yellow
        untracked = red

[merge]
        # Include summaries of merged commits in newly created merge commit messages
        log = true

[branch "master"]
        remote = origin
        merge = refs/heads/master

[core]
        excludesfile = ~/.gitignore
        attributesfile = ~/.gitattributes
        editor = vim
        ignorecase = false

[apply]
        whitespace = nowarn

[mergetool]
        keepBackup = false

[difftool]
        prompt = false

[help]
        autocorrect = 0

[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        #
        # Setting to git 2.0 default to surpress warning message
        default = simple

[filter "media"]
        clean = git-media-clean %f
        smudge = git-media-smudge %f

[pretty]
        # tut: http://gitimmersion.com/lab_10.html
        # ref: http://linux.die.net/man/1/git-log
        # Result: <short-sha> <commit-message> (<pointer-names>) -- <commit-author-name>; <relative-time>
        nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"
